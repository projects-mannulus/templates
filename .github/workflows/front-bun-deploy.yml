name: Publish Angular App Server and Docker hub

#en fase de pruebas porque el compilar el angular app no funciona
on:
  workflow_call:
    inputs:
      baseHref:
        description: 'Base Href'
        required: true
        default: '/'
      nodeVersion:
        description: 'Node Version'
        required: true
        default: '14.x'

env:
  outputPath: /smart-campus-dashboard
  baseHref: smart-campus-dashboard
  node-version: 18

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install Dependencies
        run: bun install

      - name: Build Angular App
        run: |
          bun run build --configuration=production --base-href=/${{ env.baseHref }}/
          echo "Comprimiendo archivos..."
          tar -czf dist-${{ github.sha }}.tgz dist/

      - name: Load to Server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: dist-${{ github.sha }}.tgz
          target: ~/pages

      - name: Deploy on Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/pages
            tar -xzf dist-${{ github.sha }}.tgz --strip-components=1
            rm dist-${{ github.sha }}.tgz

      - name: Archive Deployment
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  docker_image:
    needs: deploy
    #aqui se le debe agregar un protection rules de tipo "Required reviewers" para que solo se pueda publicar cuando se acepte manualmente
    # DOCKER_TAG es una variable de entorno que se debe crear en el repositorio, por defecto se puso como "latest"
    environment: docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      #Download the artifact from the previous job (angular compile app).
      - name: Download Deployment Artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: build Docker Image
        run: docker build -f "DockerfilePipeline" -t ${{ secrets.DOCKERHUB_USERNAME }}/smartcampusdashboard:${{ vars.DOCKER_TAG }} "."

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/smartcampusdashboard:${{ vars.DOCKER_TAG }}
